"use strict";(self.webpackChunkangular_challenge=self.webpackChunkangular_challenge||[]).push([[928],{7928:(d,i,e)=>{e.r(i),e.d(i,{TextAlign:()=>s,default:()=>s});const s=e(9220).Extension.create({name:"textAlign",addOptions:()=>({types:[],alignments:["left","center","right","justify"],defaultAlignment:"left"}),addGlobalAttributes(){return[{types:this.options.types,attributes:{textAlign:{default:this.options.defaultAlignment,parseHTML:t=>t.style.textAlign||this.options.defaultAlignment,renderHTML:t=>t.textAlign===this.options.defaultAlignment?{}:{style:`text-align: ${t.textAlign}`}}}}]},addCommands(){return{setTextAlign:t=>({commands:n})=>!!this.options.alignments.includes(t)&&this.options.types.every(r=>n.updateAttributes(r,{textAlign:t})),unsetTextAlign:()=>({commands:t})=>this.options.types.every(n=>t.resetAttributes(n,"textAlign"))}},addKeyboardShortcuts(){return{"Mod-Shift-l":()=>this.editor.commands.setTextAlign("left"),"Mod-Shift-e":()=>this.editor.commands.setTextAlign("center"),"Mod-Shift-r":()=>this.editor.commands.setTextAlign("right"),"Mod-Shift-j":()=>this.editor.commands.setTextAlign("justify")}}})}}]);